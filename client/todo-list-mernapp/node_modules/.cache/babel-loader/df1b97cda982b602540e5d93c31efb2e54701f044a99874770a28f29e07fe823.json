{"ast":null,"code":"var _jsxFileName = \"/Users/simrandhaliwal/Documents/summer2023/mern-todo/client/todo-list-mernapp/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { BsPencilSquare, BsTrash3 } from 'react-icons/bs';\nimport axios from 'axios';\nimport './Todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [itemText, setItemText] = useState('');\n  const [listItems, setListItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState('');\n  const [updateItemText, setUpdateItemText] = useState('');\n\n  //add new todo item to database\n  const addItem = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5500/api/item', {\n        item: itemText\n      });\n      setListItems(prev => [...prev, res.data]);\n      setItemText('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //Create function to fetch all todo items from database -- we will use useEffect hook\n  useEffect(() => {\n    const getItemsList = async () => {\n      try {\n        const res = await axios.get('http://localhost:5500/api/items');\n        setListItems(res.data);\n        console.log('render');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getItemsList();\n  }, []);\n\n  // Delete item when click on delete\n  const deleteItem = async id => {\n    try {\n      const res = await axios.delete(`http://localhost:5500/api/item/${id}`);\n      const newListItems = listItems.filter(item => item._id !== id);\n      setListItems(newListItems);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //Update item\n  const updateItem = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.put(`http://localhost:5500/api/item/${isUpdating}`, {\n        item: updateItemText\n      });\n      console.log(res.data);\n      const updatedItemIndex = listItems.findIndex(item => item._id === isUpdating);\n      const updatedItem = listItems[updatedItemIndex].item = updateItemText;\n      setUpdateItemText('');\n      setIsUpdating('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  //before updating item we need to show input field where we will create our updated item\n  const renderUpdateForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"update-form\",\n    onSubmit: e => {\n      updateItem(e);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"update-new-input\",\n      type: \"text\",\n      placeholder: \"New Item\",\n      onChange: e => {\n        setUpdateItemText(e.target.value);\n      },\n      value: updateItemText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-sm btn-block btn-outline-primary \",\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-sm btn-block btn-outline-primary\",\n      onClick: () => {\n        setIsUpdating('');\n      },\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Todo\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"h1\",\n      children: \"My Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this)\n  // </div>\n  ;\n}\n_s(Todo, \"p195Y5dS6FrkpoeQLn31ngASVAg=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","useEffect","BsPencilSquare","BsTrash3","axios","jsxDEV","_jsxDEV","Todo","_s","itemText","setItemText","listItems","setListItems","isUpdating","setIsUpdating","updateItemText","setUpdateItemText","addItem","e","preventDefault","res","post","item","prev","data","err","console","log","getItemsList","get","deleteItem","id","delete","newListItems","filter","_id","updateItem","put","updatedItemIndex","findIndex","updatedItem","renderUpdateForm","className","onSubmit","children","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","class","_c","$RefreshReg$"],"sources":["/Users/simrandhaliwal/Documents/summer2023/mern-todo/client/todo-list-mernapp/src/components/Todo.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport {BsPencilSquare, BsTrash3} from 'react-icons/bs';\nimport axios from 'axios';\nimport './Todo.css';\n\nfunction Todo() {\n  const [itemText, setItemText] = useState('');\n  const [listItems, setListItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState('');\n  const [updateItemText, setUpdateItemText] = useState('');\n\n  //add new todo item to database\n  const addItem = async (e) => {\n    e.preventDefault();\n    try{\n      const res = await axios.post('http://localhost:5500/api/item', {item: itemText})\n      setListItems(prev => [...prev, res.data]);\n      setItemText('');\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  //Create function to fetch all todo items from database -- we will use useEffect hook\n  useEffect(()=>{\n    const getItemsList = async () => {\n      try{\n        const res = await axios.get('http://localhost:5500/api/items')\n        setListItems(res.data);\n        console.log('render')\n      }catch(err){\n        console.log(err);\n      }\n    }\n    getItemsList()\n  },[]);\n\n  // Delete item when click on delete\n  const deleteItem = async (id) => {\n    try{\n      const res = await axios.delete(`http://localhost:5500/api/item/${id}`)\n      const newListItems = listItems.filter(item=> item._id !== id);\n      setListItems(newListItems);\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  //Update item\n  const updateItem = async (e) => {\n    e.preventDefault()\n    try{\n      const res = await axios.put(`http://localhost:5500/api/item/${isUpdating}`, {item: updateItemText})\n      console.log(res.data)\n      const updatedItemIndex = listItems.findIndex(item => item._id === isUpdating);\n      const updatedItem = listItems[updatedItemIndex].item = updateItemText;\n      setUpdateItemText('');\n      setIsUpdating('');\n    }catch(err){\n      console.log(err);\n    }\n  }\n  //before updating item we need to show input field where we will create our updated item\n  const renderUpdateForm = () => (\n    <form className=\"update-form\" onSubmit={(e)=>{updateItem(e)}} >\n      <input className=\"update-new-input\" type=\"text\" placeholder=\"New Item\" onChange={e=>{setUpdateItemText(e.target.value)}} value={updateItemText} />\n      <button className=\"btn btn-sm btn-block btn-outline-primary \" type=\"submit\">Update</button>\n      <button className = \"btn btn-sm btn-block btn-outline-primary\" onClick={()=>{setIsUpdating('')}}>Cancel</button>\n    </form>\n  )\n\n  return (\n    <div className=\"Todo\">\n      <p class=\"h1\" >My Todo List</p>\n      {/* <form className=\"mb-3 input-group\" onSubmit={e => addItem(e)}>\n        <input\n          name=\"todo\"\n          className=\"form-control\"\n          placeholder=\"I'm going to...\"\n          value={itemText}\n          onChange={e => {setItemText(e.target.value)}}\n        />\n        <button className=\"btn btn-primary\">Add</button>\n        {\n          !!itemText && <button\n            type=\"button\"\n            className=\"fa fa-times\"\n            style={{\n              background: 'none',\n              border: 'none',\n              position: 'absolute',\n              right: 40,\n              top: 0,\n              bottom: 0,\n              marginRight: 20,\n              zIndex: 10\n            }}\n            onClick={() => setItemText('')}\n          />\n        }\n      </form>\n      {/* <form className=\"form2\" onSubmit={e => addItem(e)}>\n        <input type=\"text\" placeholder='Add Todo Item' onChange={e => {setItemText(e.target.value)} } value={itemText} />\n        <button type=\"submit\">Add</button>\n      </form> */} \n      {/* <div className=\"todo-listItems\">\n        {\n          listItems.map(item => (\n          <div className=\"card\">\n            {\n              isUpdating === item._id\n              ? renderUpdateForm()\n              : <>\n                  <p className=\"card-body\">{item.item}</p>\n                  <div className='card-footer'>\n                  <button className=\"btn btn-sm btn-block btn-outline-danger float-right\" onClick={()=>{deleteItem(item._id)}}><BsTrash3/></button>\n                  <button className=\"btn btn-sm btn-block btn-outline-primary float-right\" onClick={()=>{setIsUpdating(item._id)}}><BsPencilSquare/></button>\n                  </div>\n                </>\n            }\n          </div>\n          )) */}\n        \n        \n      </div>\n    // </div>\n  );\n}\n\nexport default Todo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}